{"state":{"content":"<h1>Hello World!</h1>\n<p>Let's get started with Perseus!</p>\n<p><em>To follow along here, you'll want to be familiar with Rust, which you can learn more about <a href=\"https://rust-lang.org\">here</a>. You should also have it and <code>cargo</code> installed.</em></p>\n<p>To begin, create a new folder for your project, let's call it <code>my-perseus-app</code>. Now, create a <code>Cargo.toml</code> file in that folder. This tells Rust which packages you want to use in your project and some other metadata. Put the following inside:</p>\n<pre><code class=\"language-toml\">[package]\nname = &quot;my-perseus-app&quot;\nversion = &quot;0.1.0&quot;\nedition = &quot;2018&quot;\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nperseus = &quot;0.2&quot;\nsycamore = &quot;0.6&quot;\n\n</code></pre>\n<details>\n<summary>What are those dependencies doing?</summary>\n<ul>\n<li><code>perseus</code> -- the core module for Perseus</li>\n<li><a href=\"https://github.com/sycamore-rs/sycamore\"><code>sycamore</code></a> -- the amazing system on which Perseus is built, this allows you to write reactive web apps in Rust</li>\n</ul>\n<p>Note that we've set these dependencies up so that they'll automatically update <em>patch versions</em>, which means we'll get bug fixes automatically, but we won't get any updates that will break our app!</p>\n</details>\n<p>Now, create an <code>index.html</code> file at the root of your project and put the following inside:</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;UTF-8&quot; /&gt;\n        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;\n        &lt;title&gt;Perseus Example ‚Äì Tiny&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre>\n<details>\n<summary>Why do I need an HTML file?</summary>\n<p>Perseus aims to be as versatile as possible, and so it allows you to include your own <code>index.html</code> file, in which you can import things like fonts, analytics, etc.</p>\n<p>This file MUST contain at least the following:</p>\n<ul>\n<li><code>&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</code>, which is where your app will be rendered, this must be a <code>&lt;div&gt;</code> with no other attributes except the <code>id</code>, and that spacing (that way parsing is lightweight and fast)</li>\n<li>A <code>&lt;head&gt;</code>, which is where HTML metadata goes (even if you don't have any metadata, Perseus still needs it)</li>\n</ul>\n<p>Note also that we don't have to import anything to make Perseus run here, the server will do that automatically for us!</p>\n</details>\n<p>Now, create a new directory called <code>src</code> and add a new file inside called <code>lib.rs</code>. Put the following inside:</p>\n<pre><code class=\"language-rust\">use perseus::{define_app, ErrorPages, Template};\nuse std::rc::Rc;\nuse sycamore::template;\ndefine_app! {\n    templates: [\n        Template::&lt;G&gt;::new(&quot;index&quot;).template(Rc::new(|_| {\n            template! {\n                p { &quot;Hello World!&quot; }\n            }\n        }))\n    ],\n    error_pages: ErrorPages::new(Rc::new(|url, status, err, _| {\n        template! {\n            p { (format!(&quot;An error with HTTP code {} occurred at '{}': '{}'.&quot;, status, url, err)) }\n        }\n    }))\n}\n\n</code></pre>\n<details>\n<summary>How does that work?</summary>\n<p>First, we import some things that'll be useful:</p>\n<ul>\n<li><code>perseus::{define_app, ErrorPages, Template}</code> -- the -<code>define_app!</code> macro, which tells Perseus how your app works; the <code>ErrorPages</code> <code>struct</code>, which lets you tell Perseus how to handle errors (like <em>404 Not Found</em> if the user goes to a nonexistent page); and the <code>Template</code> <code>struct</code>, which is how Perseus manages pages in your app</li>\n<li><code>std::rc::Rc</code> -- a <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\">reference-counted smart pointer</a> (you don't <em>have</em> to understand these to use Perseus, but reading that link would be helpful)</li>\n<li><code>sycamore::template</code> -- Sycamore's [<code>template!</code> macro], which lets you write HTML-like code in Rust</li>\n</ul>\n<p>Then, we use the <code>define_app!</code> macro to declare the different aspects of the app, starting with the <em>templates</em>. We only have one template, which we've called <code>index</code> (a special name that makes it render at the root of your app), and then we define how that should look, creating a paragraph (<code>p</code>) containing the text <code>Hello World!</code>. Perseus does all kinds of clever stuff with this under the hood, and we put it in an <code>Rc</code> to enable that.</p>\n<p>Finally, we tell Perseus what to do if something in your app fails, like if the user goes to a page that doesn't exist. This requires creating a new instance of <code>ErrorPages</code>, which is a <code>struct</code> that lets you define a separate error page for every <a href=\"https://httpstatuses.com\">HTTP status code</a>, as well as a fallback. Here, we've just defined the fallback. That page is given the URL that caused the error, the HTTP status code, and the actual error message, all of which we display with a Sycamore <code>template!</code>, with seamless interpolation.</p>\n</details>\n<p>Now install the Perseus CLI with <code>cargo install perseus-cli</code> (you'll need <code>wasm-pack</code> to let Perseus build your app, use <code>cargo install wasm-pack</code> to install it) to make your life way easier, and deploy your app to <a href=\"http://localhost:8080\">http://localhost:8080</a> by running <code>perseus serve</code> inside the root of your project! This will take a while the first time, because it's got to fetch all your dependencies and build your app.</p>\n<details>\n<summary>Why do I need a CLI?</summary>\n<p>Perseus is a <em>very</em> complex system, and, if you had to write all that complexity yourself, that <em>Hello World!</em> example would be more like 1700 lines of code than 17! The CLI lets you abstract away all that complexity into a directory that you might have noticed appear called <code>.perseus/</code>. If you take a look inside, you'll actually find two crates (Rust packages): one for your app, and another for the server that serves your app. These are what actually run your app, and they import the code you've written. The <code>define_app!</code> macro defines a series of functions and constants at compile-time that make this possible.</p>\n<p>When you run <code>perseus serve</code>, the <code>.perseus/</code> directory is created and added to your <code>.gitignore</code>, and then three stages occur in parallel (they're shown in your terminal):</p>\n<ul>\n<li><em>üî® Generating your app</em> -- here, your app is built to a series of static files in <code>.perseus/dist/static</code>, which makes your app lightning-fast (your app's pages are ready before it's even been deployed, which is called <em>static site generation</em>, or SSG)</li>\n<li><em>üèóÔ∏è Building your app to Wasm</em> -- here, your app is built to <a href=\"https://webassembly.org\">WebAssembly</a>, which is what lets a low-level programming language like Rust run in the browser</li>\n<li><em>üì° Building server</em> -- here, Perseus builds its internal server based on your code, and prepares to serve your app</li>\n</ul>\n<p>The first time you run this command, it can take quite a while to get everything ready, but after that it'll be really fast. And, if you haven't changed any code (<em>at all</em>) since you last ran it, you can run <code>perseus serve --no-build</code> to run the server basically instantaneously.</p>\n</details>\n<p>Once that's done, hop over to <a href=\"http://localhost:8080\">http://localhost:8080</a> in any modern browser (not Internet Explorer...), and you should see <em>Hello World!</em> printed on the screen! If you try going to <a href=\"http://localhost:8080/about\">http://localhost:8080/about</a> or any other page, you should see a message that tells you the page wasn't found.</p>\n<p>Congratulations! You've just created your first ever Perseus app! You can see the source code for this section <a href=\"https://github.com/framesurge/perseus/tree/main/examples/tiny\">here</a>.</p>\n<h2>Moving Forward</h2>\n<p>The next section creates a slightly more realistic app with more than just one file, which will show you how a Perseus app is usually structured.</p>\n<p>After that, you'll learn how different features of Perseus work, like <em>incremental generation</em> (which lets you build pages on-demand at runtime)!</p>\n<h3>Alternatives</h3>\n<p>If you've gone through this and you aren't that chuffed with Perseus, here are some similar projects in Rust:</p>\n<ul>\n<li><a href=\"https://github.com/sycamore-rs/sycamore\">Sycamore</a> (without Perseus) -- <em>A reactive library for creating web apps in Rust and WebAssembly.</em></li>\n<li><a href=\"https://github.com/yewstack/yew\">Yew</a> -- <em>Rust/Wasm framework for building client web apps.</em></li>\n<li><a href=\"https://github.com/seed-rs/seed\">Seed</a> -- <em>A Rust framework for creating web apps.</em></li>\n<li><a href=\"https://github.com/chinedufn/percy\">Percy</a> -- <em>Build frontend browser apps with Rust + WebAssembly. Supports server side rendering.</em></li>\n<li><a href=\"https://github.com/MoonZoon/MoonZoon\">MoonZoon</a> -- <em>Rust Fullstack Framework.</em></li>\n</ul>\n","current_version":"0.2.x","manifest":{"0.1.x":{"docs_rs":"0.1","git":"v0.1.4","state":"outdated"},"0.2.x":{"docs_rs":"0.2","git":"v0.2.3","state":"outdated"},"0.3.0-0.3.3":{"docs_rs":"0.3.3","git":"v0.3.3","state":"outdated"},"0.3.4":{"docs_rs":"0.3","git":"v0.3.6","state":"outdated"},"0.4.x":{"docs_rs":"0.4","git":"HEAD","state":"stable"}},"sidebar_content":"<h1>Introduction</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/intro\">Introduction</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/hello-world\">Hello World!</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/second-app\">Your Second App</a></li>\n</ul>\n<hr />\n<h1>Reference</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/define-app\"><code>define_app!</code></a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/views\">Writing Views</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/debugging\">Debugging</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/templates/intro\">Templates and Routing</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/templates/metadata-modification\">Modifying the <code>&lt;head&gt;</code></a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/templates/setting-headers\">Modifying HTTP Headers</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/error-pages\">Error Pages</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/static-content\">Static Content</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/i18n/intro\">Internationalization</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/i18n/defining\">Defining Translations</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/i18n/using\">Using Translations</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/i18n/translations-managers\">Translations Managers</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/i18n/other-engines\">Other Translation Engines</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/strategies/build-state\">Build State</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/strategies/build-paths\">Build Paths</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/strategies/request-state\">Request State</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/strategies/incremental\">Incremental Generation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/strategies/amalgamation\">State Amalgamation</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/cli\">CLI</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/ejecting\">Ejecting</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/config-managers\">Config Managers</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/testing/intro\">Testing</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/testing/checkpoints\">Checkpoints</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/testing/fantoccini-basics\">Fantoccini Basics</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/testing/manual\">Manual Testing</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/styling\">Styling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/deploying/intro\">Deploying</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/deploying/exporting\">Static Exporting</a></li>\n<li><a href=\"\">Server Deployment</a></li>\n<li><a href=\"\">Serverless Deployment</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/updating\">Migrating from v0.1.x</a></li>\n</ul>\n<hr />\n<h1>Advanced</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/advanced/intro\">Under the Hood</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/advanced/arch\">Architecture</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/advanced/initial-loads\">Initial Loads</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/advanced/subsequent-loads\">Subsequent Loads</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.2.x/advanced/routing\">Routing</a></li>\n</ul>\n</li>\n</ul>\n","status":"Outdated","title":"Hello World!"},"head":"<title>Hello World! | Perseus Docs</title><link rel=stylesheet href=.perseus/static/styles/markdown.css><link rel=stylesheet href=.perseus/static/styles/docs_links_markdown.css><link rel=stylesheet href=.perseus/static/prism.css>"}