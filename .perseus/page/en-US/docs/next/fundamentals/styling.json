{"state":{"content":"<h1>Styling</h1>\n<p>In any kind of web development, you probably want your site to look good, and that will involve working with a language called <em>CSS</em>, short for <em>Cascading Style Sheets</em>. It's well beyond the scope of these docs to explain CSS, so we'll leave that to <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\">this fantastic introduction</a> if you're new to it.</p>\n<p>Right now, Perseus and Sycamore have limited inbuilt styling capabilities, and you're best off using either traditional styling (i.e. set a class <code>header-button</code> and style that in <code>header.css</code>, etc.), or a styling library like <a href=\"https://tailwindcss.com\">Tailwind</a>, which provides utility classes like <code>rounded</code> and <code>dark:shadow-lg</code>.</p>\n<p><em>There is currently work ongoing on a styling framework for Sycamore/Perseus called <a href=\"https://github.com/framesurge/jacaranda\">Jacaranda</a>, which will support fully typed styling!</em></p>\n<h2>Full-page layouts</h2>\n<p>A lot of websites these days are based on <em>full-page layouts</em>, which are when the entire page is taken up, usually by a header, some main content, and a footer. Getting this to work well, however, if unreasonably complicated in many cases. So, here's an example of exactly what CSS you need to get it working:</p>\n<pre><code class=\"language-css\">/* This removes the margins inserted by default around pages */\n* {\n    margin: 0;\n}\n\n/* This makes all the elements that wrap our code take up the whole page, so that we can put things at the bottom.\n * Without this, the footer would be just beneath the content if the content doesn't fill the whole page (try disabling this).\n*/\nhtml, body, #root {\n    height: 100%;\n}\n/* This makes the `&lt;div&gt;` that wraps our whole app use CSS Grid to display three sections: the header, content, and footer. */\n#root {\n    display: grid;\n    grid-template-columns: 1fr;\n    /* The header will be automatically sized, the footer will be as small as possible, and the content will take up the rest of the space in the middle */\n    grid-template-rows: auto 1fr min-content;\n    grid-template-areas:\n        'header'\n        'main'\n        'footer';\n}\nheader {\n    /* Put this in the right place in the grid */\n    grid-area: header;\n    /* Make this float over the content so it persists as we scroll */\n    position: fixed;\n    top: 0;\n    z-index: 99;\n    /* Make this span the whole page */\n    width: 100%;\n}\nmain {\n    /* Put this in the right place in the grid */\n    grid-area: main;\n    /* The header is positioned 'floating' over the content, so we have to make sure this doesn't go behind the header, or it would be invisible.\n     * You may need to adjust this based on screen size, depending on how the header expands.\n    */\n    margin-top: 5rem;\n}\nfooter {\n    /* Put this in the right place in the grid */\n    grid-area: footer;\n}\n\n</code></pre>\n<p>The comments in this file should make it fairly self-explanatory, but what it does is create a sticky header that maintains its spot when the user scrolls, while the footer will always be at the bottom of the page (but is not sticky when the content overflows the page). You can combine this with a layout component like this to get an easy way of creating full-page layouts for your sites:</p>\n<pre><code class=\"language-rust\">use sycamore::prelude::*;\n\n// NOTE: None of the code in this file is Perseus-specific! This could easily be\n// applied to any Sycamore app.\n\n#[component]\npub fn Layout&lt;'a, G: Html&gt;(\n    cx: Scope&lt;'a&gt;,\n    LayoutProps { title, children }: LayoutProps&lt;'a, G&gt;,\n) -&gt; View&lt;G&gt; {\n    let children = children.call(cx);\n\n    view! { cx,\n        // These elements are styled with bright colors for demonstration purposes\n        header(style = &quot;background-color: red; color: white; padding: 1rem&quot;) {\n            p { (title.to_string()) }\n        }\n        main(style = &quot;padding: 1rem&quot;) {\n            (children)\n        }\n        footer(style = &quot;background-color: black; color: white; padding: 1rem&quot;) {\n            p { &quot;Hey there, I'm a footer!&quot; }\n        }\n    }\n}\n\n#[derive(Prop)]\npub struct LayoutProps&lt;'a, G: Html&gt; {\n    /// The title of the page, which will be displayed in the header.\n    pub title: &amp;'a str,\n    /// The content to put inside the layout.\n    pub children: Children&lt;'a, G&gt;,\n}\n\n</code></pre>\n<p>You can then use this like so:</p>\n<pre><code class=\"language-rust\">use crate::components::layout::Layout;\nuse perseus::prelude::*;\nuse sycamore::prelude::*;\n\nfn index_page&lt;G: Html&gt;(cx: Scope) -&gt; View&lt;G&gt; {\n    view! { cx,\n        Layout(title = &quot;Index&quot;) {\n            // Anything we put in here will be rendered inside the `&lt;main&gt;` block of the layout\n            p { &quot;Hello World!&quot; }\n            br {}\n            a(href = &quot;long&quot;) { &quot;Long page&quot; }\n        }\n    }\n}\n\n#[engine_only_fn]\nfn head(cx: Scope) -&gt; View&lt;SsrNode&gt; {\n    view! { cx,\n        title { &quot;Index Page&quot; }\n    }\n}\n\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\n    Template::build(&quot;index&quot;).view(index_page).head(head).build()\n}\n\n</code></pre>\n<p>For more about full page layouts, see <a href=\"https://github.com/framesurge/perseus/tree/main/examples/demos/full_page_layout\">this example</a>.</p>\n","current_version":"next","manifest":{"0.1.x":{"docs_rs":"0.1","git":"v0.1.4","state":"outdated"},"0.2.x":{"docs_rs":"0.2","git":"v0.2.3","state":"outdated"},"0.3.0-0.3.3":{"docs_rs":"0.3.3","git":"v0.3.3","state":"outdated"},"0.3.4":{"docs_rs":"0.3","git":"v0.3.6","state":"outdated"},"0.4.x":{"docs_rs":"0.4","git":"HEAD","state":"stable"}},"sidebar_content":"<h1>Introduction</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/intro\">Introduction</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/quickstart\">Quickstart</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/core-principles\">Core Principles</a></li>\n</ul>\n<h1>Your First App</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/installation\">Installing Perseus</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/defining\">Defining your app</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/generating-pages\">Generating pages</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/dev-cycle\">Development cycle</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/error-handling\">Error handling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/first-app/deploying\">Deploying your app</a></li>\n</ul>\n<h1>Fundamentals</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/perseus-app\"><code>PerseusApp</code></a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/reactor\">The reactor</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/routing\">Routing and navigation</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/preloading\">Preloading</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/i18n\">Internationalization</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/error-views\">Error views</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/hydration\">Hydration</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/static-content\">Static content</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/head-headers\">Heads and headers</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/styling\">Styling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/js-interop\">Working with JS</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/serving-exporting\">Servers and exporting</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/debugging\">Debugging</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/testing\">Writing tests</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/plugins\">Plugins</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/fundamentals/compilation-times\">Improving Compilation Times</a></li>\n</ul>\n<h1>The State Platform</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/intro\">Understanding state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/build\">Build-time state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/request\">Request-time state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/revalidation\">Revalidation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/incremental\">Incremental generation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/amalgamation\">State amalgamation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/browser\">Using state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/global\">Global state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/helper\">Helper state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/suspense\">Suspended state</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/freezing-thawing\">Freezing and thawing</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/state/manual\">Manually implementing <code>ReactiveState</code></a></li>\n</ul>\n<h1>Capsules</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/intro\">Introduction</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/using\">Using capsules</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/capsules/capsules-vs-components\">Capsules vs. components</a></li>\n</ul>\n<h1>Miscellaneous</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/migrating\">Migrating from v0.3.x</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/next/faq\">Common pitfalls and FAQs</a></li>\n</ul>\n","status":"Next","title":"Styling"},"head":"<title>Styling | Perseus Docs</title><link rel=stylesheet href=.perseus/static/styles/markdown.css><link rel=stylesheet href=.perseus/static/styles/docs_links_markdown.css><link rel=stylesheet href=.perseus/static/prism.css>"}