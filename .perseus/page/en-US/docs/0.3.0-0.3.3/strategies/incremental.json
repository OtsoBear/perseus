{"state":{"content":"<h1>Incremental Generation</h1>\n<p>Arguable the most powerful strategy in Perseus is <em>incremental generation</em>, which is an extension of <em>build paths</em> such that any path in the template's root path domain (more info on that concept <a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/templates/intro\">here</a>) will result in calling the <em>build state</em> strategy while the server is running.</p>\n<p>A perfect example of this would be an retail site with thousands of products, all using the <code>product</code> template. If we built all these with <em>build paths</em>, and they all require fetching information from a database, builds could take a very long time. Instead, it's far more efficient to use <em>incremental generation</em>, which will allow any path under <code>/product</code> to call the <em>build state</em> strategy, which you can then use to render the product when it's first requested. This is on-demand building. But how is this different from the <em>request state</em> strategy? It caches the pages after they've been built the first time, meaning <strong>you build once on-demand, and then it's static generation from there</strong>. In other words, this strategy provides support for rendering thousands, millions, or even billions of pages from a single template while maintaining static generation times of less than a second!</p>\n<p>Also, this strategy is fully compatible with <em>build paths</em>, meaning you could pre-render you most common pages at build-time, and have the rest built on-demand and then cached.</p>\n<h2>Usage</h2>\n<p>This is the simplest strategy in Perseus to enable, needing only one line of code. Here's the example from earlier (which you can find <a href=\"https://github.com/framesurge/perseus/blob/main/examples/showcase/src/templates/post.rs\">here</a>) that uses <em>incremental generation</em> together with <em>build paths</em> (and of course <em>build state</em>, which is mandatory for <em>incremental generation</em> to work):</p>\n<pre><code class=\"language-rust\">use perseus::{blame_err, RenderFnResult, RenderFnResultWithCause, Template};\nuse serde::{Deserialize, Serialize};\nuse sycamore::prelude::{component, view, Html, View};\n\n#[derive(Serialize, Deserialize)]\npub struct PostPageProps {\n    title: String,\n    content: String,\n}\n\n#[perseus::template(PostPage)]\n#[component(PostPage&lt;G&gt;)]\npub fn post_page(props: PostPageProps) -&gt; View&lt;G&gt; {\n    let title = props.title;\n    let content = props.content;\n    view! {\n        h1 {\n            (title)\n        }\n        p {\n            (content)\n        }\n    }\n}\n\npub fn get_template&lt;G: Html&gt;() -&gt; Template&lt;G&gt; {\n    Template::new(&quot;post&quot;)\n        .build_paths_fn(get_static_paths)\n        .build_state_fn(get_static_props)\n        .incremental_generation()\n        .template(post_page)\n}\n\n#[perseus::autoserde(build_state)]\npub async fn get_static_props(\n    path: String,\n    _locale: String,\n) -&gt; RenderFnResultWithCause&lt;PostPageProps&gt; {\n    // This path is illegal, and can't be rendered\n    if path == &quot;post/tests&quot; {\n        // return Err(GenericErrorWithCause {\n        //     error: &quot;illegal page&quot;.into(),\n        //     cause: ErrorCause::Client(Some(404)),\n        // });\n        blame_err!(client, 404, &quot;illegal page&quot;);\n    }\n    // This is just an example\n    let title = urlencoding::decode(&amp;path).unwrap();\n    let content = format!(\n        &quot;This is a post entitled '{}'. Its original slug was '{}'.&quot;,\n        title, path\n    );\n\n    Ok(PostPageProps {\n        title: title.to_string(),\n        content,\n    })\n}\n\npub async fn get_static_paths() -&gt; RenderFnResult&lt;Vec&lt;String&gt;&gt; {\n    Ok(vec![&quot;test&quot;.to_string(), &quot;blah/test/blah&quot;.to_string()])\n}\n\n</code></pre>\n<p>All we need to do is run <code>.incremental_generation()</code> on the <code>Template</code>, and it's ready.</p>\n<p>Note that this example throws a <em>404 Not Found</em> error if we go to <code>/post/tests</code>, which is considered an illegal URL. This is a demonstration of preventing certain pages from working with this strategy, and such filtering should be done in the <em>build state</em> strategy.</p>\n","current_version":"0.3.0-0.3.3","manifest":{"0.1.x":{"docs_rs":"0.1","git":"v0.1.4","state":"outdated"},"0.2.x":{"docs_rs":"0.2","git":"v0.2.3","state":"outdated"},"0.3.0-0.3.3":{"docs_rs":"0.3.3","git":"v0.3.3","state":"outdated"},"0.3.4":{"docs_rs":"0.3","git":"v0.3.6","state":"outdated"},"0.4.x":{"docs_rs":"0.4","git":"HEAD","state":"stable"}},"sidebar_content":"<h1>Introduction</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/intro\">Introduction</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/what-is-perseus\">What is Perseus?</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/hello-world\">Hello World!</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/second-app\">Your Second App</a></li>\n</ul>\n<hr />\n<h1>Reference</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/define-app\"><code>define_app!</code></a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/views\">Writing Views</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/debugging\">Debugging</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/templates/intro\">Templates and Routing</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/templates/metadata-modification\">Modifying the <code>&lt;head&gt;</code></a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/templates/setting-headers\">Modifying HTTP Headers</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/error-pages\">Error Pages</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/static-content\">Static Content</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/i18n/intro\">Internationalization</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/i18n/defining\">Defining Translations</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/i18n/using\">Using Translations</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/i18n/translations-managers\">Translations Managers</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/i18n/other-engines\">Other Translation Engines</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/strategies/intro\">Rendering Strategies</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/strategies/build-state\">Build State</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/strategies/build-paths\">Build Paths</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/strategies/request-state\">Request State</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/strategies/revalidation\">Revalidation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/strategies/incremental\">Incremental Generation</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/strategies/amalgamation\">State Amalgamation</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/hydration\">Hydration</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/cli\">CLI</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/ejecting\">Ejecting</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/snooping\">Snooping</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/testing/intro\">Testing</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/testing/checkpoints\">Checkpoints</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/testing/fantoccini-basics\">Fantoccini Basics</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/testing/manual\">Manual Testing</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/styling\">Styling</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/server-communication\">Communicating with a Server</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/stores\">Stores</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/exporting\">Static Exporting</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/intro\">Plugins</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/functional\">Functional Actions</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/control\">Control Actions</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/using\">Using Plugins</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/tinker\">The <code>tinker</code> Action</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/writing\">Writing Plugins</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/security\">Security Considerations</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/plugins/publishing\">Publishing Plugins</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/deploying/intro\">Deploying</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/deploying/serverful\">Server Deployment</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/deploying/serverless\">Serverless Deployment</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/deploying/size\">Optimizing Code Size</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/deploying/relative-paths\">Relative Paths</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/deploying/docker\">Docker Deployment</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/updating\">Migrating from v0.2.x</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/pitfalls-and-bugs\">Common Pitfalls and Known Bugs</a></li>\n</ul>\n<hr />\n<h1>Advanced</h1>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/advanced/intro\">Under the Hood</a>\n<ul>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/advanced/arch\">Architecture</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/advanced/initial-loads\">Initial Loads</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/advanced/subsequent-loads\">Subsequent Loads</a></li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/advanced/routing\">Routing</a></li>\n</ul>\n</li>\n<li><a href=\"https://framesurge.sh/perseus/en-US/docs/0.3.0-0.3.3/advanced/define_app\"><code>define_app</code> in Detail</a></li>\n</ul>\n","status":"Outdated","title":"Incremental Generation"},"head":"<title>Incremental Generation | Perseus Docs</title><link rel=stylesheet href=.perseus/static/styles/markdown.css><link rel=stylesheet href=.perseus/static/styles/docs_links_markdown.css><link rel=stylesheet href=.perseus/static/prism.css>"}